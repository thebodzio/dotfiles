# .zshrc

# powerlevel9k/10k prompt

# MODE should be set before powerlevel9k is sourced.
# The reason for that is this option is used in icons.zsh
# and icons.zsh is sourced by powerlevel9k itself.

# URxvt doesn't support fontconfig fonts and, what follows,
# fontconfig fallback glyphs. These are required for the icons
# in https://github.com/gabrielelana/awesome-terminal-fonts
# to work. So we use icons in this mode only for terminals that
# support them, like Termite.

# Standard terminal (no-X console) has TERM variable set to "linux"
if [[ $TERM == 'xterm-termite' ]]; then
	POWERLEVEL9K_MODE='nerdfont-complete'
	POWERLEVEL9K_TIME_FORMAT="%D{\uf017 %H:%M:%S}"
fi

POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=''
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%k%F{yellow}\u25b6%f "
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

# Dir
# Truncating doesn't work properly unless DIR_LENGTH is explicitly set
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3
POWERLEVEL9K_SHORTEN_STRATEGY='truncate_middle'
POWERLEVEL9K_SHORTEN_DELIMITER='â€¦'
POWERLEVEL9K_DIR_HOME_BACKGROUND='yellow'
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND='yellow'
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND='red'

# VCS
#POWERLEVEL9K_VCS_BACKGROUND='green'
#POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='red'

# Time
POWERLEVEL9K_TIME_BACKGROUND='blue'

# Segments
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir rbenv vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status time)

# Change POWERLEVEL9K colors if terminal is accessed remotely

# Use when connected to studio.ruthenus.pl
{{- if eq .chezmoi.os "linux" }}
if [[ `/usr/bin/hostname --domain` == 'studio.ruthenus.pl' ]]; then
{{- else if eq .chezmoi.os "darwin" }}
if [[ `/bin/hostname` == 'studio.ruthenus.pl' ]]; then
{{- end }}
	POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND='009' # orange
	POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND='black'

# For any other host accessed remotely
else
	POWERLEVEL9K_CONTEXT_REMOTE_BACKGROUND='cyan'
	POWERLEVEL9K_CONTEXT_REMOTE_FOREGROUND='black'
fi

# Load zgen
# Remember to "zgen reset" whenever .zshrc zgen portion is modified!
# zgen itself should be in a different directory than ".zgen".
source ~/.zgen/zgen.zsh

if ! zgen saved; then
	echo "Generating a zgen save"

	# Oh My Zsh plugins
	zgen oh-my-zsh
	zgen oh-my-zsh plugins/colored-man-pages
	zgen oh-my-zsh plugins/colorize
	zgen oh-my-zsh plugins/git # may interfere with graphics magick
	zgen oh-my-zsh plugins/jump

	# Other plugins
	# To install a new plugin just give its user/repository from GitHub.
	# Zgen will pull this repository itself--you don't have to do it yourself.
	zgen load zsh-users/zsh-syntax-highlighting
	zgen load zsh-users/zsh-completions
	zgen load zsh-users/zsh-autosuggestions

	# Themes
	# Color-dependent theme selection after this section
	#zgen load romkatv/powerlevel10k powerlevel10k

	# Save generated init script
	zgen save
fi

# Themes
if [[ `echotc Co` = '256' ]]; then
	zgen load romkatv/powerlevel10k powerlevel10k
else
	source ~/.zsh/prompt
fi

# Custom settings
export BROWSER=firefox

{{- if lookPath "highlight" }}
export LESSOPEN='| highlight --out-format=xterm256 --force %s'
{{- end }}

export LESS='-x4 -j3 -R -i'
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"
export EZA_ICON_SPACING=2

{{- if stat (joinPath .chezmoi.homeDir ".texlive") }}
export MANPATH="$MANPATH:$HOME/.texlive/2024/texmf-dist/doc/man"
export INFOPATH="$INFOPATH:$HOME/.texlive/2024/texmf-dist/doc/info"
export PATH="$HOME/.texlive/2024/bin/x86_64-linux:$PATH"
{{- end }}

source ~/.aliases
source ~/.zsh/suffix.aliases

# ls colors
{{- if eq .chezmoi.os "linux" }}
eval `dircolors ~/.config/dircolors.256dark`
{{- else if eq .chezmoi.os "darwin" }}
# gdircolors is part of homebrew core
# -- do not expect it to be available out of the box
eval `gdircolors ~/.config/dircolors.256dark`
{{- end }}

# Freeze terminal settings to prevent programs from messing them up
# and forcing user to reset terminal
ttyctl -f

# We don't want history shared between terminals
# (each terminal should have its own history).
# Use "setopt" to list enabled options and "unsetopt"
# to see disabled options
unsetopt share_history

# Rename multiple files in bulk
autoload -U zmv


# Key bindings
# ------------
# Set proper codes for Ctrl and Alt + Left/Right to move 
# a word back and forward respectively. Use "cat"
# in stdin mode to check codes generated by key combinations.
# Use "bindkey" to list currently defined bindings.
# Reference: man zshzle

bindkey '^[[1;5D' backward-word		# Ctrl + Left
bindkey '^[[1;5C' forward-word		# Ctrl + Right
bindkey '^[[1;3D' backward-word		# Alt + Left
bindkey '^[[1;3C' forward-word		# Alt + Right
bindkey '^H' backward-kill-word		# Ctrl + Backspace
bindkey '^[[3;5~' kill-word		# Ctrl + Delete
bindkey '^[[H' beginning-of-line	# Home
bindkey '^[[F' end-of-line		# End

# PATH
export PATH="$HOME/.scripts:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.bin:$PATH"

# vim: ft=sh
